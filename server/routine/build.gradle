plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // 추가
}

group = 'com.seb45_main_031'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext { // 추가
	set('snippetsDir', file("build/generated-snippets"))
}

configurations{ // 추가
	asciidoctorExtensions
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	implementation 'com.google.code.gson:gson'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation 'org.springframework.security:spring-security-test' // 추가

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // 추가
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor' // 추가

//	implementation 'mysql:mysql-connector-java:8.0.28'




}

tasks.named('test') {
	outputs.dir snippetsDir // 추가
	useJUnitPlatform()
}

tasks.named('asciidoctor'){ // 추가
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy){ // 추가
	dependsOn asciidoctor
	println "asciidoctor output: ${asciidoctor.outputDir}"
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}

build{ // 추가
	dependsOn copyDocument
}

bootJar{ // 추가
	dependsOn copyDocument
	from ("${asciidoctor.outputDir}"){
		into 'static/docs'
	}
}